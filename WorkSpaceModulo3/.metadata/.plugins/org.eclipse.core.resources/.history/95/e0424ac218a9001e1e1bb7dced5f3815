package com.krakedev.inventarios.bdd;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;

import com.krakedev.inventarios.entidades.DetallePedido;
import com.krakedev.inventarios.entidades.DetalleVenta;
import com.krakedev.inventarios.entidades.Venta;
import com.krakedev.inventarios.excepciones.KrakeDevException;
import com.krakedev.inventarios.utils.ConexionBDD;

public class VentasBDD {
	public void insertar(Venta venta) throws KrakeDevException {
		Connection con = null;
		PreparedStatement ps = null;
		PreparedStatement psDet = null;
		PreparedStatement psCab = null;
		PreparedStatement psHis = null;
		ResultSet rsClave = null;
		int codigoCabecera = 0;
		BigDecimal totalSinIva = new BigDecimal(0);
		BigDecimal ivaTotal = new BigDecimal(0);
		BigDecimal total = totalSinIva.add(ivaTotal);

		Date fechaActual = new Date();
		Timestamp fechaHoraActual = new Timestamp(fechaActual.getTime());
		try {
			con = ConexionBDD.obtenerConexion();
			ps = con.prepareStatement("insert into cabecera_ventas (fecha, total_sin_iva, iva, total)values (?,?,?,?)",
					Statement.RETURN_GENERATED_KEYS);
			ps.setTimestamp(1, fechaHoraActual);
			BigDecimal nulo = new BigDecimal(0);
			ps.setBigDecimal(2, nulo);
			ps.setBigDecimal(3, nulo);
			ps.setBigDecimal(4, nulo);

			ps.executeUpdate();

			rsClave = ps.getGeneratedKeys();

			if (rsClave.next()) {
				codigoCabecera = rsClave.getInt(1);
			}

			ArrayList<DetalleVenta> detallesVenta = venta.getDetalles();
			for (DetalleVenta det : detallesVenta) {
				psDet = con.prepareStatement(
						"insert into detalle_ventas (cabecera_ventas, producto, cantidad, precio_venta, subtotal, subtotal_con_iva) values(?,?,?,?,?,?)");
				psDet.setInt(1, codigoCabecera);
				psDet.setInt(2, det.getProducto().getCodigo());
				psDet.setInt(3, det.getCantidad());
				psDet.setBigDecimal(4, det.getProducto().getPrecioVenta());

				BigDecimal pv = det.getProducto().getPrecioVenta();
				BigDecimal cantidad = new BigDecimal(det.getCantidad());
				BigDecimal subtotal = pv.multiply(cantidad);

				psDet.setBigDecimal(5, subtotal);

				BigDecimal iva = new BigDecimal(1.12 / 100);
				BigDecimal subtotalConIva = (subtotal.multiply(iva)).add(subtotal);

				if (det.getProducto().isTieneIva() == true) {
					psDet.setBigDecimal(6, subtotalConIva);
					ivaTotal = ivaTotal.add(subtotal.multiply(iva));
				} else {
					psDet.setBigDecimal(6, subtotal);
				}
				totalSinIva = totalSinIva.add(subtotal);
				psDet.executeUpdate();
				
				
				psHis = con.prepareStatement(
						"insert into historial_stock (fecha, referencia, producto, cantidad) values (?,?,?,?)");
				psHis.setTimestamp(1, fechaHoraActual);
				
				String referencia = "VENTA " + venta.getCodigo();
				psHis.setString(2, referencia);
				psHis.setInt(3,det.getProducto().getCodigo());
				psHis.setInt(4, det.getCantidad()*(-1));
				
				psHis.executeUpdate();
			}
			
			psCab = con
					.prepareStatement("update cabecera_ventas set total_sin_iva=?, iva=?, total=? where codigo_cv=?");

			psCab.setBigDecimal(1, totalSinIva);
			psCab.setBigDecimal(2, ivaTotal);
			psCab.setBigDecimal(3, total);
			psCab.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
			throw new KrakeDevException("Error al insertar al insertar. Detalle:" + e.getMessage());
		} catch (KrakeDevException e) {
			throw e;
		} finally {
			if (con != null) {
				try {
					con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
